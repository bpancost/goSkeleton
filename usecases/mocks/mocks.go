// Code generated by MockGen. DO NOT EDIT.
// Source: goSkeleton/usecases (interfaces: Usecases)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "goSkeleton/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecases is a mock of Usecases interface.
type MockUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUsecasesMockRecorder
}

// MockUsecasesMockRecorder is the mock recorder for MockUsecases.
type MockUsecasesMockRecorder struct {
	mock *MockUsecases
}

// NewMockUsecases creates a new mock instance.
func NewMockUsecases(ctrl *gomock.Controller) *MockUsecases {
	mock := &MockUsecases{ctrl: ctrl}
	mock.recorder = &MockUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecases) EXPECT() *MockUsecasesMockRecorder {
	return m.recorder
}

// AddPersonCase mocks base method.
func (m *MockUsecases) AddPersonCase(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPersonCase", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddPersonCase indicates an expected call of AddPersonCase.
func (mr *MockUsecasesMockRecorder) AddPersonCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPersonCase", reflect.TypeOf((*MockUsecases)(nil).AddPersonCase), arg0)
}

// GetPersonCase mocks base method.
func (m *MockUsecases) GetPersonCase(arg0 string) (*domain.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonCase", arg0)
	ret0, _ := ret[0].(*domain.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersonCase indicates an expected call of GetPersonCase.
func (mr *MockUsecasesMockRecorder) GetPersonCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonCase", reflect.TypeOf((*MockUsecases)(nil).GetPersonCase), arg0)
}
